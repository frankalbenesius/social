service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
    	allow read: if true; // id, name, & avatar are public
      allow create, update: if request.auth.uid == userId
                            && request.resource.data.keys().hasAll([ 'id', 'name', 'createdAt' ])
                            && request.resource.data.size() == 3
                            && request.resource.data.id is string
                            && request.resource.data.name is string
                            && request.resource.data.createdAt is timestamp;

      match /friends/{friendId} {
      	allow read: if request.auth.uid == userId
                    || exists(/databases/$(database)/documents/users/$(userId)/friends/$(request.auth.uid));
        allow write: if false;
      }

      match /requests/{requestId} {
      	allow read: if request.auth.uid == userId;
        allow create: if request.auth.uid == requestId
                      && request.auth.uid == request.resource.data.user;
        allow update: if request.auth.uid == request.resource.data.user
                      || request.auth.uid == userId;
        allow delete: if request.auth.uid == userId;
      }

    }

    match /posts/{postId} {
      allow read: if request.auth.uid == resource.data.wall
                  || exists(/databases/$(database)/documents/users/$(resource.data.wall)/friends/$(request.auth.uid));
      allow create: if request.auth.uid != null
                    && exists(/databases/$(database)/documents/users/$(request.resource.data.wall)/friends/$(request.auth.uid));
    }

  }
}
